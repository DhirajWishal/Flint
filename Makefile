# Alternative GNU Make workspace makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

ifeq ($(config),debug)
  FlintAudio_config = debug
  FlintCore_config = debug
  FlintEngine_config = debug
  FlintGraphics_config = debug
  GraphicsCore_config = debug
  VulkanBackend_config = debug
  optick_config = debug
  FlintEditor_config = debug
  SampleScene_config = debug
  TestBase_config = debug
  ImageBasedLighting_config = debug
  Sponza_config = debug
  SmartShaders_config = debug
  ScreenSpaceReflections_config = debug

else ifeq ($(config),prerelease)
  FlintAudio_config = prerelease
  FlintCore_config = prerelease
  FlintEngine_config = prerelease
  FlintGraphics_config = prerelease
  GraphicsCore_config = prerelease
  VulkanBackend_config = prerelease
  optick_config = prerelease
  FlintEditor_config = prerelease
  SampleScene_config = prerelease
  TestBase_config = prerelease
  ImageBasedLighting_config = prerelease
  Sponza_config = prerelease
  SmartShaders_config = prerelease
  ScreenSpaceReflections_config = prerelease

else ifeq ($(config),release)
  FlintAudio_config = release
  FlintCore_config = release
  FlintEngine_config = release
  FlintGraphics_config = release
  GraphicsCore_config = release
  VulkanBackend_config = release
  optick_config = release
  FlintEditor_config = release
  SampleScene_config = release
  TestBase_config = release
  ImageBasedLighting_config = release
  Sponza_config = release
  SmartShaders_config = release
  ScreenSpaceReflections_config = release

else
  $(error "invalid configuration $(config)")
endif

PROJECTS := FlintAudio FlintCore FlintEngine FlintGraphics GraphicsCore VulkanBackend optick FlintEditor SampleScene TestBase ImageBasedLighting Sponza SmartShaders ScreenSpaceReflections

.PHONY: all clean help $(PROJECTS) Code Code/ThirdParty Demos Demos/Tests Editor

all: $(PROJECTS)

Code: Code/ThirdParty FlintAudio FlintCore FlintEngine FlintGraphics GraphicsCore VulkanBackend

Code/ThirdParty: optick

Demos: Demos/Tests SampleScene

Demos/Tests: ImageBasedLighting ScreenSpaceReflections SmartShaders Sponza TestBase

Editor: FlintEditor

FlintAudio: FlintCore
ifneq (,$(FlintAudio_config))
	@echo "==== Building FlintAudio ($(FlintAudio_config)) ===="
	@${MAKE} --no-print-directory -C Code/Audio -f Makefile config=$(FlintAudio_config)
endif

FlintCore: optick
ifneq (,$(FlintCore_config))
	@echo "==== Building FlintCore ($(FlintCore_config)) ===="
	@${MAKE} --no-print-directory -C Code/Core -f Makefile config=$(FlintCore_config)
endif

FlintEngine: FlintGraphics
ifneq (,$(FlintEngine_config))
	@echo "==== Building FlintEngine ($(FlintEngine_config)) ===="
	@${MAKE} --no-print-directory -C Code/Engine -f Makefile config=$(FlintEngine_config)
endif

FlintGraphics: VulkanBackend
ifneq (,$(FlintGraphics_config))
	@echo "==== Building FlintGraphics ($(FlintGraphics_config)) ===="
	@${MAKE} --no-print-directory -C Code/Graphics -f Makefile config=$(FlintGraphics_config)
endif

GraphicsCore: FlintCore
ifneq (,$(GraphicsCore_config))
	@echo "==== Building GraphicsCore ($(GraphicsCore_config)) ===="
	@${MAKE} --no-print-directory -C Code/GraphicsCore -f Makefile config=$(GraphicsCore_config)
endif

VulkanBackend: GraphicsCore
ifneq (,$(VulkanBackend_config))
	@echo "==== Building VulkanBackend ($(VulkanBackend_config)) ===="
	@${MAKE} --no-print-directory -C Code/VulkanBackend -f Makefile config=$(VulkanBackend_config)
endif

optick:
ifneq (,$(optick_config))
	@echo "==== Building optick ($(optick_config)) ===="
	@${MAKE} --no-print-directory -C Code/optick -f Makefile config=$(optick_config)
endif

FlintEditor: FlintEngine
ifneq (,$(FlintEditor_config))
	@echo "==== Building FlintEditor ($(FlintEditor_config)) ===="
	@${MAKE} --no-print-directory -C Editor -f Makefile config=$(FlintEditor_config)
endif

SampleScene: FlintEngine
ifneq (,$(SampleScene_config))
	@echo "==== Building SampleScene ($(SampleScene_config)) ===="
	@${MAKE} --no-print-directory -C Demos/SampleScene -f Makefile config=$(SampleScene_config)
endif

TestBase: FlintEngine
ifneq (,$(TestBase_config))
	@echo "==== Building TestBase ($(TestBase_config)) ===="
	@${MAKE} --no-print-directory -C Demos/Tests/TestBase -f Makefile config=$(TestBase_config)
endif

ImageBasedLighting: TestBase
ifneq (,$(ImageBasedLighting_config))
	@echo "==== Building ImageBasedLighting ($(ImageBasedLighting_config)) ===="
	@${MAKE} --no-print-directory -C Demos/Tests/ImageBasedLighting -f Makefile config=$(ImageBasedLighting_config)
endif

Sponza: TestBase
ifneq (,$(Sponza_config))
	@echo "==== Building Sponza ($(Sponza_config)) ===="
	@${MAKE} --no-print-directory -C Demos/Tests/Sponza -f Makefile config=$(Sponza_config)
endif

SmartShaders: TestBase
ifneq (,$(SmartShaders_config))
	@echo "==== Building SmartShaders ($(SmartShaders_config)) ===="
	@${MAKE} --no-print-directory -C Demos/Tests/SmartShaders -f Makefile config=$(SmartShaders_config)
endif

ScreenSpaceReflections: TestBase
ifneq (,$(ScreenSpaceReflections_config))
	@echo "==== Building ScreenSpaceReflections ($(ScreenSpaceReflections_config)) ===="
	@${MAKE} --no-print-directory -C Demos/Tests/ScreenSpaceReflections -f Makefile config=$(ScreenSpaceReflections_config)
endif

clean:
	@${MAKE} --no-print-directory -C Code/Audio -f Makefile clean
	@${MAKE} --no-print-directory -C Code/Core -f Makefile clean
	@${MAKE} --no-print-directory -C Code/Engine -f Makefile clean
	@${MAKE} --no-print-directory -C Code/Graphics -f Makefile clean
	@${MAKE} --no-print-directory -C Code/GraphicsCore -f Makefile clean
	@${MAKE} --no-print-directory -C Code/VulkanBackend -f Makefile clean
	@${MAKE} --no-print-directory -C Code/optick -f Makefile clean
	@${MAKE} --no-print-directory -C Editor -f Makefile clean
	@${MAKE} --no-print-directory -C Demos/SampleScene -f Makefile clean
	@${MAKE} --no-print-directory -C Demos/Tests/TestBase -f Makefile clean
	@${MAKE} --no-print-directory -C Demos/Tests/ImageBasedLighting -f Makefile clean
	@${MAKE} --no-print-directory -C Demos/Tests/Sponza -f Makefile clean
	@${MAKE} --no-print-directory -C Demos/Tests/SmartShaders -f Makefile clean
	@${MAKE} --no-print-directory -C Demos/Tests/ScreenSpaceReflections -f Makefile clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "  debug"
	@echo "  prerelease"
	@echo "  release"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   FlintAudio"
	@echo "   FlintCore"
	@echo "   FlintEngine"
	@echo "   FlintGraphics"
	@echo "   GraphicsCore"
	@echo "   VulkanBackend"
	@echo "   optick"
	@echo "   FlintEditor"
	@echo "   SampleScene"
	@echo "   TestBase"
	@echo "   ImageBasedLighting"
	@echo "   Sponza"
	@echo "   SmartShaders"
	@echo "   ScreenSpaceReflections"
	@echo ""
	@echo "For more information, see https://github.com/premake/premake-core/wiki"