# Alternative GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

SHELLTYPE := posix
ifeq (.exe,$(findstring .exe,$(ComSpec)))
	SHELLTYPE := msdos
endif

# Configurations
# #############################################

ifeq ($(origin CC), default)
  CC = clang
endif
ifeq ($(origin CXX), default)
  CXX = clang++
endif
ifeq ($(origin AR), default)
  AR = ar
endif
INCLUDES += -I../Code -I. -I../ThirdParty/ImGuizmo -I../ThirdParty/imgui -I../ThirdParty/glm
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64
LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
define PREBUILDCMDS
endef
define PRELINKCMDS
endef

ifeq ($(config),debug)
TARGETDIR = ../Builds/Editor/Binaries/FlintEditor/Debug
TARGET = $(TARGETDIR)/FlintEditor
OBJDIR = ../Builds/Editor/Intermediate/FlintEditor/Debug
DEFINES += -DFLINT_DEBUG -DFLINT_PLATFORM_LINUX -DFLINT_SOLUTION_DIR=../
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -g /MTd
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -g -std=c++17 /MTd
LIBS += ../Builds/Binaries/Debug/libFlintEngine.a
LDDEPS += ../Builds/Binaries/Debug/libFlintEngine.a
define POSTBUILDCMDS
	@echo Running postbuild commands
	cp -rf "../ThirdParty/glfw/src/Release/glfw3.dll" "../Builds/Editor/Binaries/FlintEditor/Debug"
	cp -rf "../ThirdParty/Runtime/vulkan-1.dll" "../Builds/Editor/Binaries/FlintEditor/Debug"
	cp -rf "../ThirdParty/Assimp/bin/Release/assimp-vc142-mt.dll" "../Builds/Editor/Binaries/FlintEditor/Debug"
endef

else ifeq ($(config),prerelease)
TARGETDIR = ../Builds/Editor/Binaries/FlintEditor/PreRelease
TARGET = $(TARGETDIR)/FlintEditor
OBJDIR = ../Builds/Editor/Intermediate/FlintEditor/PreRelease
DEFINES += -DFLINT_PRE_RELEASE -DFLINT_PLATFORM_LINUX -DFLINT_SOLUTION_DIR=../
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2 /MT
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -std=c++17 /MT
LIBS += ../Builds/Binaries/PreRelease/libFlintEngine.a
LDDEPS += ../Builds/Binaries/PreRelease/libFlintEngine.a
define POSTBUILDCMDS
	@echo Running postbuild commands
	cp -rf "../ThirdParty/glfw/src/Release/glfw3.dll" "../Builds/Editor/Binaries/FlintEditor/PreRelease"
	cp -rf "../ThirdParty/Runtime/vulkan-1.dll" "../Builds/Editor/Binaries/FlintEditor/PreRelease"
	cp -rf "../ThirdParty/Assimp/bin/Release/assimp-vc142-mt.dll" "../Builds/Editor/Binaries/FlintEditor/PreRelease"
endef

else ifeq ($(config),release)
TARGETDIR = ../Builds/Editor/Binaries/FlintEditor/Release
TARGET = $(TARGETDIR)/FlintEditor
OBJDIR = ../Builds/Editor/Intermediate/FlintEditor/Release
DEFINES += -DFLINT_RELEASE -DUSE_OPTICK=0 -DFLINT_PLATFORM_LINUX -DFLINT_SOLUTION_DIR=../
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2 /MT
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -std=c++17 /MT
LIBS += ../Builds/Binaries/Release/libFlintEngine.a
LDDEPS += ../Builds/Binaries/Release/libFlintEngine.a
define POSTBUILDCMDS
	@echo Running postbuild commands
	cp -rf "../ThirdParty/glfw/src/Release/glfw3.dll" "../Builds/Editor/Binaries/FlintEditor/Release"
	cp -rf "../ThirdParty/Runtime/vulkan-1.dll" "../Builds/Editor/Binaries/FlintEditor/Release"
	cp -rf "../ThirdParty/Assimp/bin/Release/assimp-vc142-mt.dll" "../Builds/Editor/Binaries/FlintEditor/Release"
endef

endif

# Per File Configurations
# #############################################


# File sets
# #############################################

GENERATED :=
OBJECTS :=

GENERATED += $(OBJDIR)/Application.o
GENERATED += $(OBJDIR)/Camera.o
GENERATED += $(OBJDIR)/ClientManager.o
GENERATED += $(OBJDIR)/ComponentView.o
GENERATED += $(OBJDIR)/ControllerView.o
GENERATED += $(OBJDIR)/DirectoryView.o
GENERATED += $(OBJDIR)/DockSpace.o
GENERATED += $(OBJDIR)/DockerMenuBar.o
GENERATED += $(OBJDIR)/DrawInstanceUI.o
GENERATED += $(OBJDIR)/EditorRenderTarget.o
GENERATED += $(OBJDIR)/GraphEditor.o
GENERATED += $(OBJDIR)/ImCurveEdit.o
GENERATED += $(OBJDIR)/ImGradient.o
GENERATED += $(OBJDIR)/ImGuiAdapter.o
GENERATED += $(OBJDIR)/ImGuizmo.o
GENERATED += $(OBJDIR)/ImSequencer.o
GENERATED += $(OBJDIR)/Main.o
GENERATED += $(OBJDIR)/MaterialPipelineUI.o
GENERATED += $(OBJDIR)/ScenePanel.o
GENERATED += $(OBJDIR)/SceneRenderTarget.o
GENERATED += $(OBJDIR)/StaticModelUI.o
GENERATED += $(OBJDIR)/VikingRoom.o
GENERATED += $(OBJDIR)/imgui.o
GENERATED += $(OBJDIR)/imgui_demo.o
GENERATED += $(OBJDIR)/imgui_draw.o
GENERATED += $(OBJDIR)/imgui_tables.o
GENERATED += $(OBJDIR)/imgui_widgets.o
OBJECTS += $(OBJDIR)/Application.o
OBJECTS += $(OBJDIR)/Camera.o
OBJECTS += $(OBJDIR)/ClientManager.o
OBJECTS += $(OBJDIR)/ComponentView.o
OBJECTS += $(OBJDIR)/ControllerView.o
OBJECTS += $(OBJDIR)/DirectoryView.o
OBJECTS += $(OBJDIR)/DockSpace.o
OBJECTS += $(OBJDIR)/DockerMenuBar.o
OBJECTS += $(OBJDIR)/DrawInstanceUI.o
OBJECTS += $(OBJDIR)/EditorRenderTarget.o
OBJECTS += $(OBJDIR)/GraphEditor.o
OBJECTS += $(OBJDIR)/ImCurveEdit.o
OBJECTS += $(OBJDIR)/ImGradient.o
OBJECTS += $(OBJDIR)/ImGuiAdapter.o
OBJECTS += $(OBJDIR)/ImGuizmo.o
OBJECTS += $(OBJDIR)/ImSequencer.o
OBJECTS += $(OBJDIR)/Main.o
OBJECTS += $(OBJDIR)/MaterialPipelineUI.o
OBJECTS += $(OBJDIR)/ScenePanel.o
OBJECTS += $(OBJDIR)/SceneRenderTarget.o
OBJECTS += $(OBJDIR)/StaticModelUI.o
OBJECTS += $(OBJDIR)/VikingRoom.o
OBJECTS += $(OBJDIR)/imgui.o
OBJECTS += $(OBJDIR)/imgui_demo.o
OBJECTS += $(OBJDIR)/imgui_draw.o
OBJECTS += $(OBJDIR)/imgui_tables.o
OBJECTS += $(OBJDIR)/imgui_widgets.o

# Rules
# #############################################

all: $(TARGET)
	@:

$(TARGET): $(GENERATED) $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	$(PRELINKCMDS)
	@echo Linking FlintEditor
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning FlintEditor
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(GENERATED)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(GENERATED)) rmdir /s /q $(subst /,\\,$(GENERATED))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild: | $(OBJDIR)
	$(PREBUILDCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) | $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | prebuild
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) touch "$@"
else
	$(SILENT) echo $null >> "$@"
endif
else
$(OBJECTS): | prebuild
endif


# File Rules
# #############################################

$(OBJDIR)/GraphEditor.o: ../ThirdParty/ImGuizmo/GraphEditor.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ImCurveEdit.o: ../ThirdParty/ImGuizmo/ImCurveEdit.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ImGradient.o: ../ThirdParty/ImGuizmo/ImGradient.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ImGuizmo.o: ../ThirdParty/ImGuizmo/ImGuizmo.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ImSequencer.o: ../ThirdParty/ImGuizmo/ImSequencer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/imgui.o: ../ThirdParty/imgui/imgui.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/imgui_demo.o: ../ThirdParty/imgui/imgui_demo.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/imgui_draw.o: ../ThirdParty/imgui/imgui_draw.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/imgui_tables.o: ../ThirdParty/imgui/imgui_tables.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/imgui_widgets.o: ../ThirdParty/imgui/imgui_widgets.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Application.o: Application.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Camera.o: Components/Camera.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ClientManager.o: Components/ClientInterface/ClientManager.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VikingRoom.o: Components/Demos/VikingRoom.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/EditorRenderTarget.o: Components/EditorRenderTarget.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ImGuiAdapter.o: Components/ImGuiAdapter.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/SceneRenderTarget.o: Components/SceneRenderTarget.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ComponentView.o: Components/UI/ComponentView.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/DrawInstanceUI.o: Components/UI/Components/DrawInstanceUI.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/MaterialPipelineUI.o: Components/UI/Components/MaterialPipelineUI.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/StaticModelUI.o: Components/UI/Components/StaticModelUI.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ControllerView.o: Components/UI/ControllerView.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/DirectoryView.o: Components/UI/DirectoryView.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/DockSpace.o: Components/UI/DockSpace.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/DockerMenuBar.o: Components/UI/DockerMenuBar.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ScenePanel.o: Components/UI/ScenePanel.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Main.o: Main.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(PCH_PLACEHOLDER).d
endif