# Alternative GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

SHELLTYPE := posix
ifeq (.exe,$(findstring .exe,$(ComSpec)))
	SHELLTYPE := msdos
endif

# Configurations
# #############################################

ifeq ($(origin CC), default)
  CC = clang
endif
ifeq ($(origin CXX), default)
  CXX = clang++
endif
ifeq ($(origin AR), default)
  AR = ar
endif
INCLUDES += -I.. -I../../ThirdParty/glm -I../../ThirdParty/Assimp/include -I../../ThirdParty/optick/src -I../../ThirdParty/shaderc/libshaderc/include
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
ALL_LDFLAGS += $(LDFLAGS) -L../../ThirdParty/Assimp/lib/Release -L/usr/lib64 -m64
LINKCMD = $(AR) -rcs "$@" $(OBJECTS)
define PREBUILDCMDS
endef
define PRELINKCMDS
endef
define POSTBUILDCMDS
endef

ifeq ($(config),debug)
TARGETDIR = ../../Builds/Binaries/Debug
TARGET = $(TARGETDIR)/libFlintGraphics.a
OBJDIR = ../../Builds/Intermediate/Debug/Debug/FlintGraphics
DEFINES += -DFLINT_DEBUG -DFLINT_PLATFORM_LINUX
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -g
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -g -std=c++17
LIBS += ../../Builds/Binaries/Debug/libVulkanBackend.a -lassimp-vc142-mt -lshaderc_combined
LDDEPS += ../../Builds/Binaries/Debug/libVulkanBackend.a

else ifeq ($(config),prerelease)
TARGETDIR = ../../Builds/Binaries/PreRelease
TARGET = $(TARGETDIR)/libFlintGraphics.a
OBJDIR = ../../Builds/Intermediate/PreRelease/PreRelease/FlintGraphics
DEFINES += -DFLINT_PRE_RELEASE -DFLINT_PLATFORM_LINUX
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -std=c++17
LIBS += ../../Builds/Binaries/PreRelease/libVulkanBackend.a -lassimp-vc142-mt -lshaderc_combined
LDDEPS += ../../Builds/Binaries/PreRelease/libVulkanBackend.a

else ifeq ($(config),release)
TARGETDIR = ../../Builds/Binaries/Release
TARGET = $(TARGETDIR)/libFlintGraphics.a
OBJDIR = ../../Builds/Intermediate/Release/Release/FlintGraphics
DEFINES += -DFLINT_RELEASE -DUSE_OPTICK=0 -DFLINT_PLATFORM_LINUX
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -std=c++17
LIBS += ../../Builds/Binaries/Release/libVulkanBackend.a -lassimp-vc142-mt -lshaderc_combined
LDDEPS += ../../Builds/Binaries/Release/libVulkanBackend.a

endif

# Per File Configurations
# #############################################


# File sets
# #############################################

GENERATED :=
OBJECTS :=

GENERATED += $(OBJDIR)/Asset.o
GENERATED += $(OBJDIR)/AssetLoader.o
GENERATED += $(OBJDIR)/CubeMapGenerator.o
GENERATED += $(OBJDIR)/DefaultResourceBinder.o
GENERATED += $(OBJDIR)/GeometryStoreManager.o
GENERATED += $(OBJDIR)/GraphicsBase.o
GENERATED += $(OBJDIR)/ImageLoader.o
GENERATED += $(OBJDIR)/ProcessingNode.o
GENERATED += $(OBJDIR)/ProcessingPipeline.o
GENERATED += $(OBJDIR)/ShaderCompiler.o
GENERATED += $(OBJDIR)/SmartShaderCompiler.o
OBJECTS += $(OBJDIR)/Asset.o
OBJECTS += $(OBJDIR)/AssetLoader.o
OBJECTS += $(OBJDIR)/CubeMapGenerator.o
OBJECTS += $(OBJDIR)/DefaultResourceBinder.o
OBJECTS += $(OBJDIR)/GeometryStoreManager.o
OBJECTS += $(OBJDIR)/GraphicsBase.o
OBJECTS += $(OBJDIR)/ImageLoader.o
OBJECTS += $(OBJDIR)/ProcessingNode.o
OBJECTS += $(OBJDIR)/ProcessingPipeline.o
OBJECTS += $(OBJDIR)/ShaderCompiler.o
OBJECTS += $(OBJDIR)/SmartShaderCompiler.o

# Rules
# #############################################

all: $(TARGET)
	@:

$(TARGET): $(GENERATED) $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	$(PRELINKCMDS)
	@echo Linking FlintGraphics
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning FlintGraphics
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(GENERATED)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(GENERATED)) rmdir /s /q $(subst /,\\,$(GENERATED))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild: | $(OBJDIR)
	$(PREBUILDCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) | $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | prebuild
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) touch "$@"
else
	$(SILENT) echo $null >> "$@"
endif
else
$(OBJECTS): | prebuild
endif


# File Rules
# #############################################

$(OBJDIR)/Asset.o: Source/Asset.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/AssetLoader.o: Source/AssetLoader.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/GeometryStoreManager.o: Source/GeometryStoreManager.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/GraphicsBase.o: Source/GraphicsBase.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ImageLoader.o: Source/ImageLoader.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/DefaultResourceBinder.o: Source/ProcessingPipeline/Nodes/DefaultResourceBinder.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ProcessingNode.o: Source/ProcessingPipeline/Nodes/ProcessingNode.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ProcessingPipeline.o: Source/ProcessingPipeline/ProcessingPipeline.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ShaderCompiler.o: Source/ShaderCompiler.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/SmartShaderCompiler.o: Source/SmartShaderCompiler.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/CubeMapGenerator.o: Source/Tools/CubeMapGenerator.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(PCH_PLACEHOLDER).d
endif