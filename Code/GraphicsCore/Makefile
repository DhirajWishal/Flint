# Alternative GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

SHELLTYPE := posix
ifeq (.exe,$(findstring .exe,$(ComSpec)))
	SHELLTYPE := msdos
endif

# Configurations
# #############################################

ifeq ($(origin CC), default)
  CC = clang
endif
ifeq ($(origin CXX), default)
  CXX = clang++
endif
ifeq ($(origin AR), default)
  AR = ar
endif
INCLUDES += -I.. -I../../ThirdParty/volk -I../../ThirdParty/Vulkan/include -I../../ThirdParty/optick/src
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64
LINKCMD = $(AR) -rcs "$@" $(OBJECTS)
define PREBUILDCMDS
endef
define PRELINKCMDS
endef
define POSTBUILDCMDS
endef

ifeq ($(config),debug)
TARGETDIR = ../../Builds/Binaries/Debug
TARGET = $(TARGETDIR)/libGraphicsCore.a
OBJDIR = ../../Builds/Intermediate/Debug/Debug/GraphicsCore
DEFINES += -DFLINT_DEBUG -DFLINT_PLATFORM_LINUX
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -g
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -g -std=c++17
LIBS += ../../Builds/Binaries/Debug/libFlintCore.a
LDDEPS += ../../Builds/Binaries/Debug/libFlintCore.a

else ifeq ($(config),prerelease)
TARGETDIR = ../../Builds/Binaries/PreRelease
TARGET = $(TARGETDIR)/libGraphicsCore.a
OBJDIR = ../../Builds/Intermediate/PreRelease/PreRelease/GraphicsCore
DEFINES += -DFLINT_PRE_RELEASE -DFLINT_PLATFORM_LINUX
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -std=c++17
LIBS += ../../Builds/Binaries/PreRelease/libFlintCore.a
LDDEPS += ../../Builds/Binaries/PreRelease/libFlintCore.a

else ifeq ($(config),release)
TARGETDIR = ../../Builds/Binaries/Release
TARGET = $(TARGETDIR)/libGraphicsCore.a
OBJDIR = ../../Builds/Intermediate/Release/Release/GraphicsCore
DEFINES += -DFLINT_RELEASE -DUSE_OPTICK=0 -DFLINT_PLATFORM_LINUX
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -std=c++17
LIBS += ../../Builds/Binaries/Release/libFlintCore.a
LDDEPS += ../../Builds/Binaries/Release/libFlintCore.a

endif

# Per File Configurations
# #############################################


# File sets
# #############################################

GENERATED :=
OBJECTS :=

GENERATED += $(OBJDIR)/Buffer.o
GENERATED += $(OBJDIR)/CommandBufferAllocator.o
GENERATED += $(OBJDIR)/ComputePipeline.o
GENERATED += $(OBJDIR)/Device.o
GENERATED += $(OBJDIR)/DeviceBoundObject.o
GENERATED += $(OBJDIR)/Display.o
GENERATED += $(OBJDIR)/DynamicStateContainer.o
GENERATED += $(OBJDIR)/GeometryStore.o
GENERATED += $(OBJDIR)/GraphicsPipeline.o
GENERATED += $(OBJDIR)/Image.o
GENERATED += $(OBJDIR)/ImageView.o
GENERATED += $(OBJDIR)/Instance.o
GENERATED += $(OBJDIR)/MaterialProperties.o
GENERATED += $(OBJDIR)/OffScreenRenderTarget.o
GENERATED += $(OBJDIR)/Pipeline.o
GENERATED += $(OBJDIR)/RenderTarget.o
GENERATED += $(OBJDIR)/ResourcePackage.o
GENERATED += $(OBJDIR)/ResourcePackager.o
GENERATED += $(OBJDIR)/ScreenBoundRenderTarget.o
GENERATED += $(OBJDIR)/Shader.o
GENERATED += $(OBJDIR)/SwapChain.o
GENERATED += $(OBJDIR)/WireFrame.o
OBJECTS += $(OBJDIR)/Buffer.o
OBJECTS += $(OBJDIR)/CommandBufferAllocator.o
OBJECTS += $(OBJDIR)/ComputePipeline.o
OBJECTS += $(OBJDIR)/Device.o
OBJECTS += $(OBJDIR)/DeviceBoundObject.o
OBJECTS += $(OBJDIR)/Display.o
OBJECTS += $(OBJDIR)/DynamicStateContainer.o
OBJECTS += $(OBJDIR)/GeometryStore.o
OBJECTS += $(OBJDIR)/GraphicsPipeline.o
OBJECTS += $(OBJDIR)/Image.o
OBJECTS += $(OBJDIR)/ImageView.o
OBJECTS += $(OBJDIR)/Instance.o
OBJECTS += $(OBJDIR)/MaterialProperties.o
OBJECTS += $(OBJDIR)/OffScreenRenderTarget.o
OBJECTS += $(OBJDIR)/Pipeline.o
OBJECTS += $(OBJDIR)/RenderTarget.o
OBJECTS += $(OBJDIR)/ResourcePackage.o
OBJECTS += $(OBJDIR)/ResourcePackager.o
OBJECTS += $(OBJDIR)/ScreenBoundRenderTarget.o
OBJECTS += $(OBJDIR)/Shader.o
OBJECTS += $(OBJDIR)/SwapChain.o
OBJECTS += $(OBJDIR)/WireFrame.o

# Rules
# #############################################

all: $(TARGET)
	@:

$(TARGET): $(GENERATED) $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	$(PRELINKCMDS)
	@echo Linking GraphicsCore
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning GraphicsCore
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(GENERATED)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(GENERATED)) rmdir /s /q $(subst /,\\,$(GENERATED))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild: | $(OBJDIR)
	$(PREBUILDCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) | $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | prebuild
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) touch "$@"
else
	$(SILENT) echo $null >> "$@"
endif
else
$(OBJECTS): | prebuild
endif


# File Rules
# #############################################

$(OBJDIR)/Buffer.o: Source/Buffer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/CommandBufferAllocator.o: Source/CommandBufferAllocator.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ComputePipeline.o: Source/ComputePipeline.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Device.o: Source/Device.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/DeviceBoundObject.o: Source/DeviceBoundObject.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Display.o: Source/Display.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/DynamicStateContainer.o: Source/DynamicStateContainer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/GeometryStore.o: Source/GeometryStore.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/GraphicsPipeline.o: Source/GraphicsPipeline.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Image.o: Source/Image.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ImageView.o: Source/ImageView.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Instance.o: Source/Instance.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/MaterialProperties.o: Source/MaterialProperties.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/OffScreenRenderTarget.o: Source/OffScreenRenderTarget.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Pipeline.o: Source/Pipeline.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/RenderTarget.o: Source/RenderTarget.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ResourcePackage.o: Source/ResourcePackage.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ResourcePackager.o: Source/ResourcePackager.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ScreenBoundRenderTarget.o: Source/ScreenBoundRenderTarget.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Shader.o: Source/Shader.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/SwapChain.o: Source/SwapChain.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/WireFrame.o: Source/WireFrame.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(PCH_PLACEHOLDER).d
endif