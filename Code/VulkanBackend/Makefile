# Alternative GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

SHELLTYPE := posix
ifeq (.exe,$(findstring .exe,$(ComSpec)))
	SHELLTYPE := msdos
endif

# Configurations
# #############################################

ifeq ($(origin CC), default)
  CC = clang
endif
ifeq ($(origin CXX), default)
  CXX = clang++
endif
ifeq ($(origin AR), default)
  AR = ar
endif
INCLUDES += -I.. -I../../ThirdParty/SPIRV-Reflect -I../../ThirdParty/volk -I../../ThirdParty/Vulkan/include -I../../ThirdParty/glfw/include -I../../ThirdParty/optick/src -I../../ThirdParty/VulkanMemoryAllocator/include
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
ALL_LDFLAGS += $(LDFLAGS) -L../../ThirdParty/glfw/src/Release -L../../ThirdParty/Vulkan/lib -L/usr/lib64 -m64
LINKCMD = $(AR) -rcs "$@" $(OBJECTS)
define PREBUILDCMDS
endef
define PRELINKCMDS
endef
define POSTBUILDCMDS
endef

ifeq ($(config),debug)
TARGETDIR = ../../Builds/Binaries/Debug
TARGET = $(TARGETDIR)/libVulkanBackend.a
OBJDIR = ../../Builds/Intermediate/Debug/Debug/VulkanBackend
DEFINES += -DFLINT_DEBUG -DFLINT_PLATFORM_LINUX
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -g
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -g -std=c++17
LIBS += ../../Builds/Binaries/Debug/libGraphicsCore.a -lglfw3dll
LDDEPS += ../../Builds/Binaries/Debug/libGraphicsCore.a

else ifeq ($(config),prerelease)
TARGETDIR = ../../Builds/Binaries/PreRelease
TARGET = $(TARGETDIR)/libVulkanBackend.a
OBJDIR = ../../Builds/Intermediate/PreRelease/PreRelease/VulkanBackend
DEFINES += -DFLINT_PRE_RELEASE -DFLINT_PLATFORM_LINUX
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -std=c++17
LIBS += ../../Builds/Binaries/PreRelease/libGraphicsCore.a -lglfw3dll
LDDEPS += ../../Builds/Binaries/PreRelease/libGraphicsCore.a

else ifeq ($(config),release)
TARGETDIR = ../../Builds/Binaries/Release
TARGET = $(TARGETDIR)/libVulkanBackend.a
OBJDIR = ../../Builds/Intermediate/Release/Release/VulkanBackend
DEFINES += -DFLINT_RELEASE -DUSE_OPTICK=0 -DFLINT_PLATFORM_LINUX
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -std=c++17
LIBS += ../../Builds/Binaries/Release/libGraphicsCore.a -lglfw3dll
LDDEPS += ../../Builds/Binaries/Release/libGraphicsCore.a

endif

# Per File Configurations
# #############################################


# File sets
# #############################################

GENERATED :=
OBJECTS :=

GENERATED += $(OBJDIR)/VulkanBuffer.o
GENERATED += $(OBJDIR)/VulkanCommandBuffer.o
GENERATED += $(OBJDIR)/VulkanCommandBufferAllocator.o
GENERATED += $(OBJDIR)/VulkanComputePipeline.o
GENERATED += $(OBJDIR)/VulkanDevice.o
GENERATED += $(OBJDIR)/VulkanDisplay.o
GENERATED += $(OBJDIR)/VulkanGraphicsPipeline.o
GENERATED += $(OBJDIR)/VulkanImage.o
GENERATED += $(OBJDIR)/VulkanImageSampler.o
GENERATED += $(OBJDIR)/VulkanImageView.o
GENERATED += $(OBJDIR)/VulkanInstance.o
GENERATED += $(OBJDIR)/VulkanOffScreenRenderTarget.o
GENERATED += $(OBJDIR)/VulkanOneTimeCommandBuffer.o
GENERATED += $(OBJDIR)/VulkanQuery.o
GENERATED += $(OBJDIR)/VulkanQueue.o
GENERATED += $(OBJDIR)/VulkanRenderTarget.o
GENERATED += $(OBJDIR)/VulkanResourcePackage.o
GENERATED += $(OBJDIR)/VulkanResourcePackager.o
GENERATED += $(OBJDIR)/VulkanScreenBoundRenderTarget.o
GENERATED += $(OBJDIR)/VulkanShader.o
GENERATED += $(OBJDIR)/VulkanSwapChain.o
GENERATED += $(OBJDIR)/VulkanSynchronizationPrimitive.o
GENERATED += $(OBJDIR)/VulkanUtilities.o
GENERATED += $(OBJDIR)/spirv_reflect.o
GENERATED += $(OBJDIR)/vk_mem_alloc.o
GENERATED += $(OBJDIR)/volk.o
OBJECTS += $(OBJDIR)/VulkanBuffer.o
OBJECTS += $(OBJDIR)/VulkanCommandBuffer.o
OBJECTS += $(OBJDIR)/VulkanCommandBufferAllocator.o
OBJECTS += $(OBJDIR)/VulkanComputePipeline.o
OBJECTS += $(OBJDIR)/VulkanDevice.o
OBJECTS += $(OBJDIR)/VulkanDisplay.o
OBJECTS += $(OBJDIR)/VulkanGraphicsPipeline.o
OBJECTS += $(OBJDIR)/VulkanImage.o
OBJECTS += $(OBJDIR)/VulkanImageSampler.o
OBJECTS += $(OBJDIR)/VulkanImageView.o
OBJECTS += $(OBJDIR)/VulkanInstance.o
OBJECTS += $(OBJDIR)/VulkanOffScreenRenderTarget.o
OBJECTS += $(OBJDIR)/VulkanOneTimeCommandBuffer.o
OBJECTS += $(OBJDIR)/VulkanQuery.o
OBJECTS += $(OBJDIR)/VulkanQueue.o
OBJECTS += $(OBJDIR)/VulkanRenderTarget.o
OBJECTS += $(OBJDIR)/VulkanResourcePackage.o
OBJECTS += $(OBJDIR)/VulkanResourcePackager.o
OBJECTS += $(OBJDIR)/VulkanScreenBoundRenderTarget.o
OBJECTS += $(OBJDIR)/VulkanShader.o
OBJECTS += $(OBJDIR)/VulkanSwapChain.o
OBJECTS += $(OBJDIR)/VulkanSynchronizationPrimitive.o
OBJECTS += $(OBJDIR)/VulkanUtilities.o
OBJECTS += $(OBJDIR)/spirv_reflect.o
OBJECTS += $(OBJDIR)/vk_mem_alloc.o
OBJECTS += $(OBJDIR)/volk.o

# Rules
# #############################################

all: $(TARGET)
	@:

$(TARGET): $(GENERATED) $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	$(PRELINKCMDS)
	@echo Linking VulkanBackend
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning VulkanBackend
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(GENERATED)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(GENERATED)) rmdir /s /q $(subst /,\\,$(GENERATED))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild: | $(OBJDIR)
	$(PREBUILDCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) | $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | prebuild
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) touch "$@"
else
	$(SILENT) echo $null >> "$@"
endif
else
$(OBJECTS): | prebuild
endif


# File Rules
# #############################################

$(OBJDIR)/spirv_reflect.o: ../../ThirdParty/SPIRV-Reflect/spirv_reflect.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/volk.o: ../../ThirdParty/volk/volk.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/vk_mem_alloc.o: Source/ThirdParty/vk_mem_alloc.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VulkanBuffer.o: Source/VulkanBuffer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VulkanCommandBuffer.o: Source/VulkanCommandBuffer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VulkanCommandBufferAllocator.o: Source/VulkanCommandBufferAllocator.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VulkanComputePipeline.o: Source/VulkanComputePipeline.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VulkanDevice.o: Source/VulkanDevice.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VulkanDisplay.o: Source/VulkanDisplay.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VulkanGraphicsPipeline.o: Source/VulkanGraphicsPipeline.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VulkanImage.o: Source/VulkanImage.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VulkanImageSampler.o: Source/VulkanImageSampler.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VulkanImageView.o: Source/VulkanImageView.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VulkanInstance.o: Source/VulkanInstance.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VulkanOffScreenRenderTarget.o: Source/VulkanOffScreenRenderTarget.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VulkanOneTimeCommandBuffer.o: Source/VulkanOneTimeCommandBuffer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VulkanQuery.o: Source/VulkanQuery.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VulkanQueue.o: Source/VulkanQueue.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VulkanRenderTarget.o: Source/VulkanRenderTarget.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VulkanResourcePackage.o: Source/VulkanResourcePackage.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VulkanResourcePackager.o: Source/VulkanResourcePackager.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VulkanScreenBoundRenderTarget.o: Source/VulkanScreenBoundRenderTarget.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VulkanShader.o: Source/VulkanShader.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VulkanSwapChain.o: Source/VulkanSwapChain.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VulkanSynchronizationPrimitive.o: Source/VulkanSynchronizationPrimitive.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VulkanUtilities.o: Source/VulkanUtilities.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(PCH_PLACEHOLDER).d
endif